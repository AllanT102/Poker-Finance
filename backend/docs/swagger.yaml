basePath: /api/v1
definitions:
  backend_internal_models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  backend_internal_models.FriendRequest:
    properties:
      created_at:
        type: string
      friend_id:
        type: string
      id:
        type: string
      status:
        description: e.g., "pending", "accepted", "declined"
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  backend_internal_models.Game:
    properties:
      date:
        type: string
      id:
        type: string
      status:
        type: string
    type: object
  backend_internal_models.PaymentDetails:
    properties:
      amount:
        type: number
      details:
        type: string
      game:
        $ref: '#/definitions/backend_internal_models.Game'
      gameID:
        type: string
      id:
        type: string
      payee:
        $ref: '#/definitions/backend_internal_models.User'
      payeeID:
        type: string
      payer:
        $ref: '#/definitions/backend_internal_models.User'
      payerID:
        type: string
      status:
        description: emailSent, complete, pending
        type: string
      timeCompleted:
        type: string
      timeSubmitted:
        type: string
    type: object
  backend_internal_models.PlayedGames:
    properties:
      buyIn:
        type: number
      endAmount:
        type: number
      game:
        $ref: '#/definitions/backend_internal_models.Game'
      gameID:
        type: string
      player:
        $ref: '#/definitions/backend_internal_models.User'
      playerID:
        type: string
    type: object
  backend_internal_models.User:
    properties:
      balance:
        type: number
      createdAt:
        type: string
      displayName:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  gin.H:
    additionalProperties: {}
    type: object
  internal_api_handlers.CreateFriendRequestInput:
    properties:
      friend_email:
        type: string
      status:
        description: e.g., "pending", "accepted", "declined"
        type: string
      user_id:
        type: string
    required:
    - friend_email
    - status
    - user_id
    type: object
  internal_api_handlers.CreatePaymentDetailsInput:
    properties:
      amount:
        type: number
      details:
        type: string
      payee_id:
        type: string
      payer_id:
        type: string
      status:
        type: string
    required:
    - amount
    - payee_id
    - payer_id
    - status
    type: object
  internal_api_handlers.CreateUserInput:
    properties:
      balance:
        type: number
      display_name:
        type: string
      email:
        type: string
      name:
        type: string
    required:
    - balance
    - email
    - name
    type: object
  internal_api_handlers.CreateUserPlayedGameInput:
    properties:
      buy_in:
        type: number
    required:
    - buy_in
    type: object
  internal_api_handlers.UpdateFriendRequestInput:
    properties:
      status:
        description: e.g., "pending", "accepted", "declined"
        type: string
    required:
    - status
    type: object
  internal_api_handlers.UpdatePaymentDetailsInput:
    properties:
      amount:
        type: number
      details:
        type: string
      payee_id:
        type: string
      payer_id:
        type: string
      status:
        type: string
      time_completed:
        type: string
    type: object
  internal_api_handlers.UpdateUserInput:
    properties:
      balance:
        type: number
      display_name:
        type: string
      email:
        type: string
      name:
        type: string
    type: object
  internal_api_handlers.UpdateUserPlayedGameInput:
    properties:
      buy_in:
        type: number
      end_amount:
        type: number
    type: object
host: localhost:8080
info:
  contact: {}
  description: An API used to manage payments with friends for home poker games :)
  title: Poker Finance API
  version: "1.0"
paths:
  /FriendRequests/{id}:
    put:
      consumes:
      - application/json
      description: Update a FriendRequest's status by ID
      parameters:
      - description: friend request ID
        in: path
        name: id
        required: true
        type: string
      - description: FriendRequest Update Input
        in: body
        name: FriendRequest
        required: true
        schema:
          $ref: '#/definitions/internal_api_handlers.UpdateFriendRequestInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_internal_models.FriendRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Update a friend request by ID
      tags:
      - friend-request
  /friend-request:
    post:
      consumes:
      - application/json
      description: Create a new friend request
      parameters:
      - description: Friend Request Input
        in: body
        name: FriendRequest
        required: true
        schema:
          $ref: '#/definitions/internal_api_handlers.CreateFriendRequestInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/backend_internal_models.FriendRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Create a new friend request
      tags:
      - friend-request
  /game/{id}/end:
    post:
      consumes:
      - application/json
      description: Ends the game with the specified ID by updating its status.
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Game ended successfully
          schema:
            $ref: '#/definitions/backend_internal_models.Game'
        "400":
          description: Bad Request if the request body is incorrect
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "404":
          description: Not Found if the game does not exist
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error for database issues
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: End a game
      tags:
      - game
  /games:
    post:
      description: Create a new game
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/backend_internal_models.Game'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Create a new game
      tags:
      - games
  /games/{id}:
    delete:
      description: Delete a game by ID and all related played games
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Delete a game by ID
      tags:
      - games
    get:
      description: Get a game by ID
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_internal_models.Game'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Get a game by ID
      tags:
      - games
  /payment-details:
    post:
      consumes:
      - application/json
      description: Create new payment details
      parameters:
      - description: Payment Details Input
        in: body
        name: paymentDetails
        required: true
        schema:
          $ref: '#/definitions/internal_api_handlers.CreatePaymentDetailsInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/backend_internal_models.PaymentDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Create new payment details
      tags:
      - payment-details
  /payment-details/{id}:
    get:
      description: Get payment details by ID
      parameters:
      - description: Payment Details ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_internal_models.PaymentDetails'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Get payment details by ID
      tags:
      - payment-details
    put:
      consumes:
      - application/json
      description: Update payment details by ID
      parameters:
      - description: Payment Details ID
        in: path
        name: id
        required: true
        type: string
      - description: Payment Details Input
        in: body
        name: paymentDetails
        required: true
        schema:
          $ref: '#/definitions/internal_api_handlers.UpdatePaymentDetailsInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_internal_models.PaymentDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Update payment details by ID
      tags:
      - payment-details
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User Input
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/internal_api_handlers.CreateUserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/backend_internal_models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    get:
      description: Get a user by email
      parameters:
      - description: User email
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_internal_models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Get a user by email
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Update Input
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/internal_api_handlers.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_internal_models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Update user information
      tags:
      - users
  /users/{id}/friends:
    get:
      description: Get all friends of a user by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/backend_internal_models.FriendRequest'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Get friends by user ID
      tags:
      - users
  /users/{id}/played-games:
    get:
      description: Get played games by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/backend_internal_models.PlayedGames'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Get played games by user ID
      tags:
      - users
  /users/{id}/played-games/{gameid}:
    post:
      consumes:
      - application/json
      description: Create a new played game entry for a user
      parameters:
      - description: Played Game Input
        in: body
        name: playedGame
        required: true
        schema:
          $ref: '#/definitions/internal_api_handlers.CreateUserPlayedGameInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/backend_internal_models.PlayedGames'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Create a played game for a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a played game's details by user ID and game ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Game ID
        in: path
        name: gameid
        required: true
        type: string
      - description: Played Game Update Input
        in: body
        name: playedGame
        required: true
        schema:
          $ref: '#/definitions/internal_api_handlers.UpdateUserPlayedGameInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_internal_models.PlayedGames'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/backend_internal_models.ErrorResponse'
      summary: Update a played game by user ID and game ID
      tags:
      - users
swagger: "2.0"
